Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) Fortran Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.1 Build 20201112_000000

Compiler options: -c -O4 -fopenmp -qopt-report=5 -qopt-report-phase=vec

Begin optimization report for: VERIFY

    Report from: Vector optimizations [vec]


LOOP BEGIN at verify.f(36,9)
   remark #15388: vectorization support: reference xcrref(m) has aligned access   [ verify.f(37,12) ]
   remark #15388: vectorization support: reference xceref(m) has aligned access   [ verify.f(38,12) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.840 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at verify.f(36,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at verify.f(332,9)
   remark #15388: vectorization support: reference xcrdif(m) has aligned access   [ verify.f(334,12) ]
   remark #15389: vectorization support: reference xcr(m) has unaligned access   [ verify.f(334,30) ]
   remark #15388: vectorization support: reference xcrref(m) has aligned access   [ verify.f(334,30) ]
   remark #15388: vectorization support: reference xcrref(m) has aligned access   [ verify.f(334,36) ]
   remark #15388: vectorization support: reference xcedif(m) has aligned access   [ verify.f(335,12) ]
   remark #15389: vectorization support: reference xce(m) has unaligned access   [ verify.f(335,30) ]
   remark #15388: vectorization support: reference xceref(m) has aligned access   [ verify.f(335,30) ]
   remark #15388: vectorization support: reference xceref(m) has aligned access   [ verify.f(335,36) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.029
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 4 
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 74 
   remark #15477: vector cost: 51.000 
   remark #15478: estimated potential speedup: 1.300 
   remark #15486: divides: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at verify.f(332,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at verify.f(371,9)
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ verify.f(373,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(373,15) ]
   remark #15382: vectorization support: call to function IEEE_ARITHMETIC^FOR_IEEE_IS_NAN_K8 cannot be vectorized   [ verify.f(374,27) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ verify.f(376,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(376,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(376,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(376,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ verify.f(379,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(379,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(379,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(379,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (373:15) and at (379:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (379:15) and at (373:15)
LOOP END

LOOP BEGIN at verify.f(371,9)
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ verify.f(373,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(373,15) ]
   remark #15382: vectorization support: call to function IEEE_ARITHMETIC^FOR_IEEE_IS_NAN_K8 cannot be vectorized   [ verify.f(374,27) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ verify.f(376,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(376,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(376,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(376,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ verify.f(379,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(379,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(379,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(379,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (373:15) and at (379:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (379:15) and at (373:15)
LOOP END

LOOP BEGIN at verify.f(391,9)
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ verify.f(393,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(393,15) ]
   remark #15382: vectorization support: call to function IEEE_ARITHMETIC^FOR_IEEE_IS_NAN_K8 cannot be vectorized   [ verify.f(394,27) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ verify.f(396,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(396,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(396,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(396,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ verify.f(399,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(399,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(399,15) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt_xmit cannot be vectorized   [ verify.f(399,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (393:15) and at (399:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (399:15) and at (393:15)
LOOP END
===========================================================================
